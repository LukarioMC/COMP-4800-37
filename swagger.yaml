# How to write OpenAPI docs: https://swagger.io/docs/specification/basic-structure/
openapi: 3.0.0

info:
  title: 37 Fact API
  description: API for facts about the number 37.
  version: 1.0.0

servers:
  - url: "http://localhost:8000/"
    description: "Local server"

components:
  schemas:
    Fact:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
        note:
          type: string
        posting_date:
          type: string
        discovery_date:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
        attachments:
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
    Tag:
      type: object
      properties:
        factoid_id:
          type: integer
        category_id:
          type: integer
    Attachment:
      type: object
      properties:
        id:
          type: integer
        link:
          type: string
        type:
          type: string
    FactReport:
      type: object
      properties:
        fact:
          $ref: '#/components/schemas/FactJSON'
        issue:
          type: string
    FactJSON:
      type: object
      properties:
        id:
          type: integer
        content:
          type: string
    Category:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        is_primary:
          type: boolean
    ResponseMessage:
      type: object
      properties:
        message:
          type: string
          description: 'An error message.'

paths:
  /api/fact:
    get:
      summary: Returns a list of facts that have been optionally filtered by tags and text content. Optionally paginated.
      parameters:
        - name: tag
          in: query
          required: false
          description: A category to filter facts by.
          schema:
            type: string
        - name: searchText
          in: query
          required: false
          description: Text to look for in facts.
          schema:
            type: string
        - name: pageNum
          in: query
          required: false
          description: Requested fact page number. Must be > 0.
          schema:
            type: integer
        - name: pageSize
          in: query
          required: false
          description: Number of facts to be returned. Must be > 0.
          schema:
            type: integer
      responses:
        '200':
          description: A list of facts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Fact'
        '400':
          description: 'Error if page number and size are less than 0.'
        '500':
          description: Server error.
    post:
      summary: Adds a new fact to the database.
      requestBody:
        description: Fact data to be added.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                content:
                  description: The fact content.
                  type: string
                note:
                  description: Additional notes about the fact.
                  type: string
                discovery_date:
                  description: The date when the fact was discovered.
                  type: string
                  format: date-time
                # Sending an array of items is currently bugged, see: https://github.com/swagger-api/swagger-ui/issues/8614
                tag:
                  description: A tag or tags.
                  type: array
                  items:
                    type: string
                attachment:
                  description: URL link(s) or file(s) associated with the fact. 
                  type: string
                  format: binary
                name:
                  description: Optional anonymous submitter name.
                  type: string
                email:
                  description: Optional anonymous submitter email.
                  type: string
                country:
                  description: Two letter ISO country code.
                  type: string
                data:
                  description: JSON that contains all the other mentioned fields with the
                    exception of attachment files (URLs still permissible). If present, all 
                    fields within will take precedence over others at the top level of the
                    form.
                  type: object
                  properties:
                    content:
                      description: The fact content.
                      type: string
                    note:
                      description: Additional notes about the fact.
                      type: string
                    discovery_date:
                      description: The date when the fact was discovered.
                      type: string
                      format: date-time
                    tag:
                      description: A tag or tags.
                      type: array
                      items:
                        type: string
                    attachment:
                      description: URL link(s) associated with the fact. 
                      type: string
                    name:
                      description: Optional anonymous submitter name.
                      type: string
                    email:
                      description: Optional anonymous submitter email.
                      type: string
                    country:
                      description: Two letter ISO country code.
                      type: string
      responses:
        '201':
          description: Fact added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Invalid submission.

  /api/fact/{factID}:
    get:
      summary: Returns a fact by ID.
      parameters:
        - name: factID
          in: path
          description: An ID for a fact.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: A fact with the corresponding ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Fact'
        '404':
          description: Fact not found.
        '500':
          description: Server error.
    put:
      summary: Updates an existing fact in the database.
      parameters:
        - name: factID
          in: path
          description: An ID for a fact.
          required: true
          schema:
            type: integer
      requestBody:
        description: Fact data to be updated.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  description: The fact content.
                  type: string
                note:
                  description: Additional notes about the fact.
                  type: string
                discovery_date:
                  description: The date when the fact was discovered.
                  type: string
                  format: date-time
                tags:
                  description: A list of tag names.
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Fact updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '403':
          description: 'Unauthorized request; user must be administrator.'
        '404':
          description: Fact not found.
        '500':
          description: Server error.

  /api/fact/{factoidID}:
    delete:
      summary: Deletes a fact by its ID.
      parameters:
        - name: factoidID
          in: path
          description: ID of the factoid to be deleted.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Fact and associated attachments/tags deleted successfully.
        '403':
          description: 'Unauthorized request; user must be administrator.'
        '404':
          description: Fact not found.
        '500':
          description: Server error.

  /api/approve/{id}:
    put:
      summary: Approve a fact by ID.
      parameters:
        - name: id
          in: path
          description: ID of the fact to be approved.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Fact approved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '403':
          description: 'Unauthorized request; user must be administrator.'
        '404':
          description: Fact not found.
        '500':
          description: Server error.

  /api/report:
    post:
      summary: Sends an email report to the admin with information about the selected fact, and saves report information into the database.
      requestBody:
        description: Consists of from (sender), to (receiver), subject, and text (report content). Text contains submitter ID, fact ID, fact content, the content the user has typed into the report, and a link to the dashboard.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FactReport'
        required: true
      responses:
        '200':
          description: Email successfully sent with all the required information.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FactReport'
        '500':
          description: Server error.

  /api/report/{reportID}:
    delete:
      summary: Deletes a report by its ID.
      parameters:
        - name: reportID
          in: path
          description: ID of the report to be deleted.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report deleted successfully.
        '403':
          description: Unauthorized request; user must be administrator.
        '500':
          description: Server error.

  /api/tags:
    get:
      summary: Returns a list of all categories.
      responses:
        '200':
          description: A list of all fact categories sorted by whether they are primary.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /api/tag:
    put:
      summary: Add a new category for tags in the database.
      requestBody:
        description: Object with category name and optional isPrimary flag.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tagName:
                  type: string
                isPrimary:
                  type: boolean
      responses:
        '201':
          description: Tag successfully added.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message: 
                    type: string
        '403':
          description: 'Unauthorized request; user must be administrator.'
        '400':
          description: Invalid arguments.
        '500':
          description: Server error.

    patch:
      summary: Updates the given tag category's fields.
      requestBody:
        description: Object with category id, name and isPrimary flag.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  required: true
                name:
                  type: string
                  required: true
                isPrimary:
                  type: boolean
                  required: true
      responses:
        '200':
          description: Tag category updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Failure to update tag category.
        '403':
          description: 'Unauthorized request; user must be administrator.'

  /api/tag/{factoidID}/{categoryID}:
    delete:
      summary: Deletes a tag for a given factoid ID and category ID.
      parameters:
        - in: path
          name: factoidID
          description: ID of the factoid.
          required: true
          schema:
            type: integer
        - in: path
          name: categoryID
          description: ID of the category.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Tag deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '403':
          description: 'Unauthorized request; user must be administrator.'
        '404':
          description: Tag not found.
        '500':
          description: Server error.

  /api/tag/{tagID}:
    delete:
      summary: Deletes the tag category specified by ID.
      parameters:
        - name: tagIDs
          in: path
          required: true
          description: ID of the tag to be deleted.
          schema:
            type: integer
      responses:
        '200':
          description: Tag category deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: Failure to delete tag category.
        '403':
          description: 'Unauthorized request; user must be administrator.'

  /api/attachment/{attachmentID}:
    delete:
      summary: Deletes an attachment by its ID.
      parameters:
        - name: attachmentID
          in: path
          description: ID of the attachment to be deleted.
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Attachment deleted successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '403':
          description: 'Unauthorized request; user must be administrator.'
        '404':
          description: Attachment not found.
        '500':
          description: Server error.

  /api/attachment:
    post:
      summary: Attaches a list of attachment files to the fact specified by the ID. Requires admin privileges.
      requestBody:
        description: Attachments files and fact ID.
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                factID:
                  description: The fact ID.
                  type: integer
                attachment:
                  description: File(s) to be added to the fact. 
                  type: string
                  format: binary
      responses:
        '201':
          description: Attachment(s) added successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        '400':
          description: 'Invalid request.'
        '403':
          description: Unauthorized request; user must be administrator.